Package-o-tron is a collection of utilities to help managing cabal
files for your projects, maintaining Makefiles and other build
systems, and also some which help with your package database.

Problems:

I'd like to create a makefile with all the dependencies and packages
made explicit for a set of haskell sources. This can be used for
parallel builds, and to easily integrate into mixed language projects,
etc.

I'd like to know when my .cabal file is missing files in the
other-modules section, or has extra files listed there. I'd also like
to know if there are any unnecessary build-deps, or if any of the
version constraints exclude the latest version of a dependency.

I'd like to be able to quickly and reliably create a collection of the
tarballs for all the packages needed for some code, so I can
painlessly install these in a new sandbox/system and know that all the
same versions are there, and I don't need to access the hackage web
site (so I won't be surprised by hackage being temporarily down, or by
an updated package and the version constraints causing problems for
cabal-install). This could also produce a command line to install
these exact versions from hackage, so you can reproduce the packages
on another system without having to copy a large amount of tarballs
around.

I'd like to maintain my package database so that there is only ever
one version of a package installed, and I can easily try to 'upgrade'
if some of the packages are not at the latest version (so all the
packages are brought to the latest version without leaving any
packages with multiple versions installed, and an undo to revert back
to the previous versions if this fails).

I'd like more checking on a cabal --dry-run: I want the reinstalls and
installing different versions to be better highlighted, and I also
want to know which packages to install are installing at something
other than the latest available version.

I'd like to quickly check the installed package list to see which
packages aren't at the latest version, and which packages have more
than one version installed.

I'd like to test a cabal package with different versions of ghc, and
check the lowest and highest package version constraints (at least).

I'd like to run a process which can automatically fill in the lower
and upper bounds for dependencies in a .cabal file (even if it has to
run for hours!).

If I'm installing a lot of packages, and some of them have version
constraints which prevent another package's latest version from being
installed, I'd like to just say 'override it', and the constraint is
rewritten and cabal tries to install with all the latest versions. At
the moment, you have to cabal unpack, edit the .cabal file by hand,
then figure out what command line to supply to cabal install. Maybe it
can also run all the available tests in the altered packages and their
reverse dependants for additional assurances.

Package-o-tron can solve/ help with some of these problems (ultimately
it should cover all of them).

----

The central code in package-o-tron can parse a set of local files and
note each of the import statements with a list of matching source
files and packages (hopefully each import matches either exactly one
local file or exactly one package!). It will recurse automatically
through your local source files, and look at your installed packages
only.

Tools:

MakeHaskellMake

The Makefile in the package-o-tron package gives an example of how to
use package-o-tron to help manage a makefile for haskell projects,
using the MakeHaskellMake command.

See the Makefile and autorules.mk in the repo (link below) for an
example of how this works. This tool is used in the hssqlppp project
Makefile (https://github.com/JakeWheat/hssqlppp), see the Makefile and
autorules.mk there for another example.

You could also use the library code to get dependencies to integrate
with a build system other than Make.

CabalLint

example run on package-o-tron itself:
CabalLint package-o-tron.cabal --hide-package package-o-tron --hide-package haskell98 --hide-package haskell2010
(usually you want to hide two of {base, haskell98, haskell2010})
No output means everything OK.
Currently reports:
* imports that don't match any files or packages
* imports that match more than one file/package
* missing build-deps
* extra build-deps
* missing other-modules
* extra other-modules

SavePackages

This will try to find all the package tarballs needed by some source
code (it looks for the tarballs in your $HOME/.cabal, it can also use
local .cabal packages).

It can either show the filenames of the tarballs, or copy them all to
a supplied folder (including running cabal configure && cabal sdist
for the local packages and copying the produced tarball).


Repository: https://github.com/JakeWheat/package-o-tron

Hackage: http://hackage.haskell.org/package/package-o-tron

Contact: jakewheatmail@gmail.com
