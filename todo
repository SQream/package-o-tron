2

turn savepackages into library modules
   with commandline front ends

cabal lint examples:
run on package-o-tron
remove other-module
add unneeded package
add other-modules with internal and exposed modules to caballint
remove package-o-tron from caballist
run without --hide-package on haskell98 and on package-o-tron

add dot visualization of dependencies

bugs in make
if file has wrong module it breaks in wrong place
when generating dependencies, should error if import not found
running make on new system: doesn't report all the missing packages at
   once -> add a new target in the generated makefile which displays
   packages for an exe/lib or everything, want to be able to bootstrap
   on a fresh system, so want a complete list of packages to install
   in one go

extend to support c and c++, exes and shared libs

ability to do shared libs and profile builds with th code for haskell
   (need to build .o files twice?)

3
check cabal --dry-run for dups/ not latest version:
cabal already reports reinstall and new version, highlight these a lot
   better and add highlight for versions which aren't the latest
package database checker: dup versions, non latest versions
see http://hackage.haskell.org/package/highlight-versions

4
try and support dynamic/profiling + th builds in MakeHaskellMake

5 ...

lint: duplicate listing, unreferenced files, extensions, benchmark
   sections
refactor and document the lint, makefiler and lib modules
fix the dump exes

upgrade all: try to unregister then reinstall all cabal packages in
   latest version, or take all packages from one sandbox and install
   latest versions of same packages in another sandbox for testing


test makefilemake and caballint on a bunch of packages from hackage

...


tester: use sandboxing to:
    compile and run tests -> successful compile and successful test
      run is the validation
    start with the sdist tarball
    check ghc versions: target 7.0.x through 7.6.x
    check it works with all the latest package versions in the
      dependency ranges on each ghc
    check it works with all the earliest "

third party package hacker

produce a big dependency diagram showing modules and packages
